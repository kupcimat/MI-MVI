; ===== OLD MAP COMPETITION =====
to-report move-sheep
  report list (360 * (1 / (1 + exp (-1.0 * (((((sqrt (abs ((count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]]) + (count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]])))) * ((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count sheep in-cone 5 120))) * ((sqrt (abs (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown]))) + ((count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = green]) - ((((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = brown]) - ((sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray])) - (((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = gray]) - (count wolves in-cone 1 120)) - (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = gray])))) - (sqrt (abs ((sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray])) * ((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) - (count sheep in-cone 5 120)))))) * (((sin (count sheep in-cone 5 120)) - ((sqrt (abs (count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = gray]))) - ((count wolves in-cone 5 120) - (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green])))) * ((((count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = green]) + (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = gray])) - ((count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown]) - ((count wolves in-cone 5 120) - (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green])))) + ((count wolves in-cone 5 120) - (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green])))))))) - ((((sqrt (abs (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = gray]))) - ((sqrt (abs (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green]))) + ((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count sheep in-cone 5 120)))) - (sqrt (abs (sqrt (abs (count wolves-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]])))))) + (((sqrt (abs ((count wolves-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown])))) + (((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = gray]) - (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = gray])) + (sqrt (abs ((count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]]) + (count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]])))))) * (((((count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green]) - (count sheep-on patches at-points [[4 2] [4 1] [4 0] [4 -1] [4 -2] [3 2] [3 1] [3 0] [3 -1] [3 -2]])) - (sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray]))) + ((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count sheep in-cone 5 120))) * (((count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]]) + (count wolves-on patches at-points [[-2 -4] [-1 -4] [0 -4] [1 -4] [2 -4] [-2 -3] [-1 -3] [0 -3] [1 -3] [2 -3]])) - (sin ((sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray])) - (((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = gray]) - (count wolves in-cone 1 120)) - (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = gray]))))))))) - (((sqrt (abs ((((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count sheep in-cone 5 120)) * (count wolves in-cone 5 120)) * (((count sheep-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2]]) + (count sheep in-cone 5 120)) * (count wolves in-cone 5 120))))) - (sin ((sqrt (abs (count sheep in-cone 3 120))) + (sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray]))))) + (sin (count sheep in-cone 3 120)))))))) (1 * (1 / (1 + exp (-1.0 * (((count sheep in-cone 5 120) + (sqrt (abs (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = green])))) - (sin (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = gray])))))))
end

to-report move-wolf
  report list (360 * (1 / (1 + exp (-1.0 * ((((count sheep in-cone 5 120) + (count wolves in-cone 1 120)) + (count sheep in-cone 5 120)) + (count wolves-on patches at-points [[-2 4] [-1 4] [0 4] [1 4] [2 4] [-2 3] [-1 3] [0 3] [1 3] [2 3]])))))) (1 * (1 / (1 + exp (-1.0 * (((count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = green]) + (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = brown])) + (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = brown]))))))
end

; ===== NEW MAP COMPETITION =====
to-report move-sheep
  report list (360 * (1 / (1 + exp (-1.0 * (sqrt (abs (((count wolves in-cone 2 120) - (sqrt (abs (((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = green]) * (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = brown])) + (count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = brown]))))) - (((((sin ((count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = green]) + ((count wolves-on patches at-points [[-3 8] [-2 8] [-1 8] [0 8] [1 8] [2 8] [3 8] [-3 7] [-2 7] [-1 7] [0 7] [1 7] [2 7] [3 7]]) * (count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = brown])))) * ((sqrt (abs ((count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown]) * (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = brown])))) - (sqrt (abs (count wolves-on patches at-points [[-2 4] [-1 4] [0 4] [1 4] [2 4] [-3 3] [-2 3] [-1 3] [0 3] [1 3] [2 3] [3 3]]))))) - ((count wolves in-cone 2 120) + (count wolves in-cone 2 120))) + ((count wolves-on patches at-points [[-2 4] [-1 4] [0 4] [1 4] [2 4] [-3 3] [-2 3] [-1 3] [0 3] [1 3] [2 3] [3 3]]) - (sin (count wolves-on patches at-points [[-4 2] [-4 1] [-4 0] [-4 -1] [-4 -2] [-3 3] [-3 2] [-3 1] [-3 0] [-3 -1] [-3 -2] [-3 -3]])))) + (sqrt (abs (((count patches at-points [[1 0] [2 0] [3 0] [4 0] [5 0]] with [pcolor = brown]) + (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = green])) - ((count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = gray]) - (count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown]))))))))))))) (1 * (1 / (1 + exp (-1.0 * ((count patches at-points [[-1 0] [-2 0] [-3 0] [-4 0] [-5 0]] with [pcolor = brown]) * (count patches at-points [[0 -1] [0 -2] [0 -3] [0 -4] [0 -5]] with [pcolor = brown]))))))
end

to-report move-wolf
  report list (360 * (1 / (1 + exp (-1.0 * ((((count sheep in-cone 5 120) + (count wolves in-cone 1 120)) + (count sheep in-cone 5 120)) + (count wolves-on patches at-points [[-2 4] [-1 4] [0 4] [1 4] [2 4] [-2 3] [-1 3] [0 3] [1 3] [2 3]])))))) (1 * (1 / (1 + exp (-1.0 * (((count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = green]) + (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = brown])) + (count patches at-points [[0 1] [0 2] [0 3] [0 4] [0 5]] with [pcolor = brown]))))))
end

